// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "mongodb"
   url      = env("DATABASE_URL")
}

model User {
   id        String   @id @default(auto()) @map("_id") @db.ObjectId
   email     String   @unique
   username  String   @unique
   password  String
   avatar    String?
   createdAt DateTime @default(now())

   posts     Post[]
   savePosts SavedPost[]
}

model Post {
   id        String   @id @default(auto()) @map("_id") @db.ObjectId
   title     String
   price     Int
   images    String[]
   address   String
   city      String
   bedroom   Int
   bathroom  Int
   latitude  String
   longitude String
   type      Type
   property  Property
   createdAt DateTime @default(now())

   userId String @db.ObjectId
   user   User   @relation(fields: [userId], references: [id])

   postDetails PostDetail?
   savePosts   SavedPost[]
}

enum Type {
   buy
   rent
}

enum Property {
   apartment
   house
   condo
   land
}

model PostDetail {
   id         String   @id @default(auto()) @map("_id") @db.ObjectId
   desc       String
   utilities  String?
   pet        String?
   income     String?
   size       Int?
   school     Int?
   bus        Int?
   restaurant Int?
   createdAt  DateTime @default(now())

   postId String @unique @db.ObjectId
   post   Post   @relation(fields: [postId], references: [id])
}

model SavedPost {
   id String @id @default(auto()) @map("_id") @db.ObjectId

   userId String @unique @db.ObjectId
   postId String @unique @db.ObjectId
   user   User   @relation(fields: [userId], references: [id])
   post   Post   @relation(fields: [postId], references: [id])

   createdAt DateTime @default(now())

   @@unique([userId, postId])
}
